IMDB Movies
========================================================
author: Adrien Mina, Louis Paban, Steven Tan
date: 28th of November
autosize: true

Our project features
========================================================

- Plot statistics of movies (budget,popularity,etc...)
- Search and filter 
- Get creative wordclouds associated to each movie director

Slide With Code
========================================================

```{r}
library(data.table)
library(shiny)
library(ggplot2)
library(dplyr)
library(wordcloud)
library(wordcloud2)
library(tm)
library(stringr)
library(tidyr)
movies <- read.csv("tmdb-movies.csv", stringsAsFactors = FALSE)
movies = subset(movies, select = -c(revenue,budget,imdb_id, homepage, tagline, overview, keywords) )
colnames(movies)[colnames(movies)=="budget_adj"] <- "budget"
colnames(movies)[colnames(movies)=="revenue_adj"] <- "revenue"
movies = movies[!(is.na(movies$genres) | movies$genres==""), ]

pop_outliers <- movies[movies$popularity <= 3, ]
summary(movies)

```

Plot example:Popularity of the different genres
========================================================

```{r, echo=FALSE}
library(shiny)
library(ggplot2)
library(dplyr)
library(wordcloud)
library(wordcloud2)
library(tm)
library(stringr)
library(tidyr)
movies <- read.csv("tmdb-movies.csv", stringsAsFactors = FALSE)
movies = subset(movies, select = -c(revenue,budget,imdb_id, homepage, tagline, overview, keywords) )
colnames(movies)[colnames(movies)=="budget_adj"] <- "budget"
colnames(movies)[colnames(movies)=="revenue_adj"] <- "revenue"
movies$genres <- str_replace_all(movies$genres, '\\|', '\n')
movies$production_companies <- str_replace_all(movies$production_companies, '\\|', '\n')
movies$cast <- str_replace_all(movies$cast, '\\|', '\n')
movies = movies[!(is.na(movies$genres) | movies$genres==""), ]
pop_outliers <- movies[movies$popularity <= 3, ]

ggplot(separate_rows(pop_outliers, genres, convert = TRUE), aes(x = popularity,color = genres)) + geom_histogram(fill="white", position="dodge") + theme(legend.position="top")
 filter_search <- reactive({
    
    if(input$choice == "Director" && !is.null(input$choice)){
      if (!is.null(input$res_choice) && input$res_choice != "") {
        head(movies %>% filter(director %like% input$res_choice),100)
      }
      else{
        head(movies,150)
      }
    }
    
    else if(input$choice == "Title" && !is.null(input$choice)){
      if (!is.null(input$res_choice) && input$res_choice != "") {
        head(movies %>% filter(original_title %like% input$res_choice),100)
      }
      else{
        head(movies,150)
      }
    }
    else if(input$choice == "Year" && !is.null(input$choice)){
      if (!is.null(input$res_choice) && input$res_choice != "") {
        head(movies %>% filter(release_year == input$res_choice),100)
      }
      else{
        head(movies,150)
      }
    }
    
  })


```
